{"ast":null,"code":"var isElementHidden = function isElementHidden(node) {\n  if (node.nodeType !== Node.ELEMENT_NODE) {\n    return false;\n  }\n\n  var computedStyle = window.getComputedStyle(node, null);\n\n  if (!computedStyle || !computedStyle.getPropertyValue) {\n    return false;\n  }\n\n  return computedStyle.getPropertyValue('display') === 'none' || computedStyle.getPropertyValue('visibility') === 'hidden';\n};\n\nvar isVisibleUncached = function isVisibleUncached(node, checkParent) {\n  return !node || node === document || node && node.nodeType === Node.DOCUMENT_NODE || !isElementHidden(node) && checkParent(node.parentNode && node.parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? node.parentNode.host : node.parentNode);\n};\n\nexport var isVisibleCached = function isVisibleCached(visibilityCache, node) {\n  var cached = visibilityCache.get(node);\n\n  if (cached !== undefined) {\n    return cached;\n  }\n\n  var result = isVisibleUncached(node, isVisibleCached.bind(undefined, visibilityCache));\n  visibilityCache.set(node, result);\n  return result;\n};\nexport var notHiddenInput = function notHiddenInput(node) {\n  return !((node.tagName === 'INPUT' || node.tagName === 'BUTTON') && (node.type === 'hidden' || node.disabled));\n};\nexport var isGuard = function isGuard(node) {\n  return Boolean(node && node.dataset && node.dataset.focusGuard);\n};\nexport var isNotAGuard = function isNotAGuard(node) {\n  return !isGuard(node);\n};\nexport var isDefined = function isDefined(x) {\n  return Boolean(x);\n};","map":null,"metadata":{},"sourceType":"module"}