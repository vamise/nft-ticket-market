{"ast":null,"code":"import _classCallCheck from \"/workspace/nft-ticket-market/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport Provider from './Provider';\nimport FestivalFactoryABI from '../abi/contracts/FestiveTicketsFactory.json';\nvar provider = new Provider();\n\nvar EventFactory = function EventFactory() {\n  var _this = this;\n\n  _classCallCheck(this, EventFactory);\n\n  this.getInstance = function () {\n    return _this.instance;\n  };\n\n  var web3 = provider.web3;\n  var deploymentKey = Object.keys(FestivalFactoryABI.networks)[0];\n  this.instance = new web3.eth.Contract(FestivalFactoryABI.abi, FestivalFactoryABI.networks[deploymentKey].address);\n};\n\nvar festivalFactory = new FestivalFactory();\nObject.freeze(festivalFactory);\nexport default festivalFactory.getInstance();","map":{"version":3,"sources":["/workspace/nft-ticket-market/client/src/proxies/EventFactory.js"],"names":["Provider","FestivalFactoryABI","provider","EventFactory","getInstance","instance","web3","deploymentKey","Object","keys","networks","eth","Contract","abi","address","festivalFactory","FestivalFactory","freeze"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,kBAAP,MAA+B,6CAA/B;AAEA,IAAMC,QAAQ,GAAG,IAAIF,QAAJ,EAAjB;;IAEMG,Y,GACJ,wBAAc;AAAA;;AAAA;;AAAA,OAUdC,WAVc,GAUA;AAAA,WAAM,KAAI,CAACC,QAAX;AAAA,GAVA;;AACZ,MAAMC,IAAI,GAAGJ,QAAQ,CAACI,IAAtB;AACA,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYR,kBAAkB,CAACS,QAA/B,EAAyC,CAAzC,CAAtB;AAEA,OAAKL,QAAL,GAAgB,IAAIC,IAAI,CAACK,GAAL,CAASC,QAAb,CACdX,kBAAkB,CAACY,GADL,EAEdZ,kBAAkB,CAACS,QAAnB,CAA4BH,aAA5B,EAA2CO,OAF7B,CAAhB;AAID,C;;AAKH,IAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACAR,MAAM,CAACS,MAAP,CAAcF,eAAd;AAEA,eAAeA,eAAe,CAACX,WAAhB,EAAf","sourcesContent":["import Provider from './Provider';\nimport FestivalFactoryABI from '../abi/contracts/FestiveTicketsFactory.json';\n\nconst provider = new Provider();\n\nclass EventFactory {\n  constructor() {\n    const web3 = provider.web3;\n    const deploymentKey = Object.keys(FestivalFactoryABI.networks)[0];\n\n    this.instance = new web3.eth.Contract(\n      FestivalFactoryABI.abi,\n      FestivalFactoryABI.networks[deploymentKey].address,\n    );\n  }\n\n  getInstance = () => this.instance;\n}\n\nconst festivalFactory = new FestivalFactory();\nObject.freeze(festivalFactory);\n\nexport default festivalFactory.getInstance();"]},"metadata":{},"sourceType":"module"}