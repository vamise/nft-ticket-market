{"ast":null,"code":"var _jsxFileName = \"/workspace/nft-ticket-market/client/src/components/MyTickets.jsx\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport eventFactory from '../proxies/EventFactory';\nimport EventNFT from '../proxies/EventNFT';\nimport renderNotification from '../utils/notification-handler';\nimport { Table, Thead, Tbody, Tfoot, Tr, Th, Td, TableCaption, Text } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet web3;\n\nclass MyTickets extends Component {\n  constructor() {\n    super();\n\n    this.onListForSale = async e => {\n      try {\n        e.preventDefault();\n        const initiator = await web3.eth.getCoinbase();\n        const {\n          ticket,\n          price,\n          marketplace\n        } = this.state;\n        const nftInstance = await EventNFT(this.state.fest);\n        await nftInstance.methods.setSaleDetails(ticket, web3.utils.toWei(price, 'ether'), marketplace).send({\n          from: initiator,\n          gas: 6700000\n        });\n        renderNotification('success', 'Success', `Ticket is listed for sale in secondary market!`);\n      } catch (err) {\n        console.log('Error while listing for sale', err);\n        renderNotification('danger', 'Error', err.message.split(' ').slice(8).join(' '));\n      }\n    };\n\n    this.updateEvents = async () => {\n      try {\n        const initiator = await web3.eth.getCoinbase();\n        const activeEvents = await eventFactory.methods.getActiveEvents().call({\n          from: initiator\n        });\n        const festDetails = await eventFactory.methods.getEventDetails(activeFests[0]).call({\n          from: initiator\n        });\n        const renderData = await Promise.all(activeFests.map(async (fest, i) => {\n          const festDetails = await eventFactory.methods.getEventDetails(activeFests[i]).call({\n            from: initiator\n          });\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: fest,\n            children: festDetails[0]\n          }, fest, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this);\n        }));\n        this.setState({\n          fests: renderData,\n          fest: activeEvents[0],\n          marketplace: festDetails[4]\n        });\n        this.updateTickets();\n        console.log('state fests:', renderData);\n      } catch (err) {\n        renderNotification('danger', 'Error', 'Error while updating the events');\n        console.log('Error while updating the events', err);\n      }\n    };\n\n    this.updateTickets = async () => {\n      try {\n        const initiator = await web3.eth.getCoinbase();\n        const nftInstance = await EventNFT(this.state.fest);\n        const tickets = await nftInstance.methods.getTicketsOfCustomer(initiator).call({\n          from: initiator\n        });\n        const renderData = tickets.map((ticket, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: ticket,\n          children: ticket\n        }, ticket, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this));\n        this.setState({\n          tickets: renderData,\n          ticket: tickets[0]\n        });\n        console.log('state tickets:', renderData);\n      } catch (err) {\n        renderNotification('danger', 'Error', 'Error in updating the ticket for events');\n        console.log('Error in updating the ticket', err);\n      }\n    };\n\n    this.onEventChangeHandler = async e => {\n      try {\n        const state = this.state;\n        state[e.target.name] = e.target.value;\n        this.setState(state);\n        const {\n          fest\n        } = this.state;\n        await this.updateTickets(fest);\n        const initiator = await web3.eth.getCoinbase();\n        const festDetails = await eventFactory.methods.getEventDetails(fest).call({\n          from: initiator\n        });\n        this.setState({\n          marketplace: festDetails[4]\n        });\n      } catch (err) {\n        console.log('Error while tickets for event', err.message);\n        renderNotification('danger', 'Error', 'Error while tickets for event');\n      }\n    };\n\n    this.selectHandler = e => {\n      this.setState({\n        ticket: e.target.value\n      });\n    };\n\n    this.inputChangedHandler = e => {\n      const state = this.state;\n      state[e.target.name] = e.target.value;\n      this.setState(state);\n    };\n\n    this.state = {\n      tickets: [],\n      fests: [],\n      ticket: null,\n      fest: null,\n      marketplace: null,\n      price: null,\n      test: null\n    };\n    web3 = new Web3(window.ethereum);\n  }\n\n  async componentDidMount() {\n    await this.updateEvents();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"4xl\",\n          style: {\n            padding: \"30px 0px 0px 10px\"\n          },\n          children: \"My Tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          variant: \"simple\",\n          children: [/*#__PURE__*/_jsxDEV(Thead, {\n            children: /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                children: \"Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Ticket ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n            children: /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                children: \"Demo Account(Placeholder)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: \"dk39s9832093kx\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: \"->\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          class: \"\",\n          onSubmit: this.onListForSale,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"left\",\n            children: \"Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"browser-default\",\n            name: \"fest\",\n            value: this.state.fest || undefined,\n            onChange: this.onEventChangeHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), this.state.fests]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"left\",\n            children: \"Ticket Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"browser-default\",\n            name: \"ticket\",\n            value: this.state.ticket || undefined,\n            onChange: this.selectHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Ticket\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), this.state.tickets]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"left\",\n            children: \"Sale Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            placeholder: \"Sale Price\",\n            type: \"text\",\n            className: \"input-control\",\n            name: \"price\",\n            onChange: this.inputChangedHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 183\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 189\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"custom-btn login-btn\",\n            children: \"List for Sale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyTickets;","map":{"version":3,"sources":["/workspace/nft-ticket-market/client/src/components/MyTickets.jsx"],"names":["React","Component","Web3","eventFactory","EventNFT","renderNotification","Table","Thead","Tbody","Tfoot","Tr","Th","Td","TableCaption","Text","web3","MyTickets","constructor","onListForSale","e","preventDefault","initiator","eth","getCoinbase","ticket","price","marketplace","state","nftInstance","fest","methods","setSaleDetails","utils","toWei","send","from","gas","err","console","log","message","split","slice","join","updateEvents","activeEvents","getActiveEvents","call","festDetails","getEventDetails","activeFests","renderData","Promise","all","map","i","setState","fests","updateTickets","tickets","getTicketsOfCustomer","onEventChangeHandler","target","name","value","selectHandler","inputChangedHandler","test","window","ethereum","componentDidMount","render","padding","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport eventFactory from '../proxies/EventFactory';\nimport EventNFT from '../proxies/EventNFT';\nimport renderNotification from '../utils/notification-handler';\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Text\n} from '@chakra-ui/react';\n\nlet web3;\n\nclass MyTickets extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      tickets: [],\n      fests: [],\n      ticket: null,\n      fest: null,\n      marketplace: null,\n      price: null,\n      test: null,\n    };\n\n    web3 = new Web3(window.ethereum);\n  }\n\n  async componentDidMount() {\n    await this.updateEvents();\n  }\n\n  onListForSale = async (e) => {\n    try {\n      e.preventDefault();\n      const initiator = await web3.eth.getCoinbase();\n      const { ticket, price, marketplace } = this.state;\n      const nftInstance = await EventNFT(this.state.fest);\n      await nftInstance.methods.setSaleDetails(ticket, web3.utils.toWei(price, 'ether'), marketplace).send({ from: initiator, gas: 6700000 });\n\n      renderNotification('success', 'Success', `Ticket is listed for sale in secondary market!`);\n    } catch (err) {\n      console.log('Error while listing for sale', err);\n      renderNotification('danger', 'Error', err.message.split(' ').slice(8).join(' '));\n    }\n  }\n\n  updateEvents = async () => {\n    try {\n      const initiator = await web3.eth.getCoinbase();\n      const activeEvents = await eventFactory.methods.getActiveEvents().call({ from: initiator });\n      const festDetails = await eventFactory.methods.getEventDetails(activeFests[0]).call({ from: initiator });\n      const renderData = await Promise.all(activeFests.map(async (fest, i) => {\n        const festDetails = await eventFactory.methods.getEventDetails(activeFests[i]).call({ from: initiator });\n        return (\n          <option key={fest} value={fest} >{festDetails[0]}</option>\n        )\n      }));\n\n      this.setState({ fests: renderData, fest: activeEvents[0], marketplace: festDetails[4] });\n      this.updateTickets();\n      console.log('state fests:', renderData);\n    } catch (err) {\n      renderNotification('danger', 'Error', 'Error while updating the events');\n      console.log('Error while updating the events', err);\n    }\n  }\n\n  updateTickets = async () => {\n    try {\n      const initiator = await web3.eth.getCoinbase();\n      const nftInstance = await EventNFT(this.state.fest);\n      const tickets = await nftInstance.methods.getTicketsOfCustomer(initiator).call({ from: initiator });\n      const renderData = tickets.map((ticket, i) => (\n        <option key={ticket} value={ticket} >{ticket}</option>\n      ));\n\n      this.setState({ tickets: renderData, ticket: tickets[0] });\n      console.log('state tickets:', renderData);\n    } catch (err) {\n      renderNotification('danger', 'Error', 'Error in updating the ticket for events');\n      console.log('Error in updating the ticket', err);\n    }\n  }\n\n  onEventChangeHandler = async (e) => {\n    try {\n      const state = this.state;\n      state[e.target.name] = e.target.value;\n      this.setState(state);\n\n      const { fest } = this.state;\n      await this.updateTickets(fest);\n\n      const initiator = await web3.eth.getCoinbase();\n      const festDetails = await eventFactory.methods.getEventDetails(fest).call({ from: initiator });\n\n      this.setState({ marketplace: festDetails[4] });\n    } catch (err) {\n      console.log('Error while tickets for event', err.message);\n      renderNotification('danger', 'Error', 'Error while tickets for event');\n    }\n  }\n\n  selectHandler = (e) => {\n    this.setState({ ticket: e.target.value });\n  }\n\n  inputChangedHandler = (e) => {\n    const state = this.state;\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div class=\"container center\" >\n        <div class=\"container\">\n          <Text fontSize='4xl' style={{ padding: \"30px 0px 0px 10px\" }}>My Tickets</Text>\n          <Table variant='simple'>\n            <Thead>\n              <Tr>\n                <Th>Event</Th>\n                <Th>Ticket ID</Th>\n                <Th>Actions</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              <Tr>\n                <Td>Demo Account(Placeholder)</Td>\n                <Td>dk39s9832093kx</Td>\n                <Td>-></Td>\n              </Tr>\n            </Tbody>\n          </Table>\n          <form class=\"\" onSubmit={this.onListForSale}>\n\n            <label class=\"left\">Events</label>\n            <select className=\"browser-default\" name='fest' value={this.state.fest || undefined} onChange={this.onEventChangeHandler}>\n              <option value=\"\" disabled >Select Event</option>\n              {this.state.fests}\n            </select><br /><br />\n\n            <label class=\"left\">Ticket Id</label>\n            <select className=\"browser-default\" name='ticket' value={this.state.ticket || undefined} onChange={this.selectHandler}>\n              <option value=\"\" disabled>Select Ticket</option>\n              {this.state.tickets}\n            </select><br /><br />\n\n            <label class=\"left\">Sale Price</label><input id=\"price\" placeholder=\"Sale Price\" type=\"text\" className=\"input-control\" name=\"price\" onChange={this.inputChangedHandler} /><br /><br />\n\n            <button type=\"submit\" className=\"custom-btn login-btn\">List for Sale</button>\n          </form>\n        </div>\n      </div >\n    )\n  }\n}\n\nexport default MyTickets;"]},"metadata":{},"sourceType":"module"}