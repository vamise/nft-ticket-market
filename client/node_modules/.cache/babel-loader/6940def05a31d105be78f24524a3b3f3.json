{"ast":null,"code":"import { forwardRef, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider, useStyles } from '@chakra-ui/system';\nimport { cx, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"overflow\", \"overflowX\", \"className\"],\n    _excluded2 = [\"className\"],\n    _excluded3 = [\"placement\"],\n    _excluded4 = [\"isNumeric\"],\n    _excluded5 = [\"isNumeric\"];\nvar TableContainer = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _ref;\n\n  var overflow = props.overflow,\n      overflowX = props.overflowX,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-table__container\", className)\n  }, rest, {\n    __css: {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: (_ref = overflow != null ? overflow : overflowX) != null ? _ref : \"auto\",\n      overflowY: \"hidden\",\n      maxWidth: \"100%\"\n    }\n  }));\n});\nvar Table = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Table\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      tableProps = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.table, _extends({\n    role: \"table\",\n    ref: ref,\n    __css: styles.table,\n    className: cx(\"chakra-table\", className)\n  }, tableProps)));\n});\n\nif (__DEV__) {\n  Table.displayName = \"Table\";\n}\n\nvar TableCaption = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$placement = props.placement,\n      placement = _props$placement === void 0 ? \"bottom\" : _props$placement,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.caption, _extends({}, rest, {\n    ref: ref,\n    __css: _extends({}, styles.caption, {\n      captionSide: placement\n    })\n  }));\n});\n\nif (__DEV__) {\n  TableCaption.displayName = \"TableCaption\";\n}\n\nvar Thead = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.thead, _extends({}, props, {\n    ref: ref,\n    __css: styles.thead\n  }));\n});\nvar Tbody = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tbody, _extends({}, props, {\n    ref: ref,\n    __css: styles.tbody\n  }));\n});\nvar Tfoot = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tfoot, _extends({}, props, {\n    ref: ref,\n    __css: styles.tfoot\n  }));\n});\nvar Th = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var isNumeric = _ref2.isNumeric,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded4);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.th, _extends({}, rest, {\n    ref: ref,\n    __css: styles.th,\n    \"data-is-numeric\": isNumeric\n  }));\n});\nvar Tr = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tr, _extends({\n    role: \"row\"\n  }, props, {\n    ref: ref,\n    __css: styles.tr\n  }));\n});\nvar Td = /*#__PURE__*/forwardRef(function (_ref3, ref) {\n  var isNumeric = _ref3.isNumeric,\n      rest = _objectWithoutPropertiesLoose(_ref3, _excluded5);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.td, _extends({\n    role: \"gridcell\"\n  }, rest, {\n    ref: ref,\n    __css: styles.td,\n    \"data-is-numeric\": isNumeric\n  }));\n});\nexport { Table, TableCaption, TableContainer, Tbody, Td, Tfoot, Th, Thead, Tr };","map":null,"metadata":{},"sourceType":"module"}