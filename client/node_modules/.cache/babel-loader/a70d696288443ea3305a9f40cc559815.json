{"ast":null,"code":"import CSSReset from '@chakra-ui/css-reset';\nimport { PortalManager } from '@chakra-ui/portal';\nimport { ThemeProvider, ColorModeProvider, GlobalStyle } from '@chakra-ui/system';\nimport { EnvironmentProvider } from '@chakra-ui/react-env';\nimport * as React from 'react';\nimport { IdProvider } from '@chakra-ui/hooks';\n/**\n * The global provider that must be added to make all Chakra components\n * work correctly\n */\n\nvar ChakraProvider = function ChakraProvider(props) {\n  var children = props.children,\n      colorModeManager = props.colorModeManager,\n      portalZIndex = props.portalZIndex,\n      _props$resetCSS = props.resetCSS,\n      resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? {} : _props$theme,\n      environment = props.environment,\n      cssVarsRoot = props.cssVarsRoot;\n\n  var _children = /*#__PURE__*/React.createElement(EnvironmentProvider, {\n    environment: environment\n  }, children);\n\n  return /*#__PURE__*/React.createElement(IdProvider, null, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    cssVarsRoot: cssVarsRoot\n  }, /*#__PURE__*/React.createElement(ColorModeProvider, {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, resetCSS && /*#__PURE__*/React.createElement(CSSReset, null), /*#__PURE__*/React.createElement(GlobalStyle, null), portalZIndex ? /*#__PURE__*/React.createElement(PortalManager, {\n    zIndex: portalZIndex\n  }, _children) : _children)));\n};\n\nexport { ChakraProvider };","map":null,"metadata":{},"sourceType":"module"}