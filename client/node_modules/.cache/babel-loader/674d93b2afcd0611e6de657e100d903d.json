{"ast":null,"code":"import { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { __DEV__, cx } from '@chakra-ui/utils';\nimport { getValidChildren } from '@chakra-ui/react-utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"spacing\"],\n    _excluded2 = [\"isCurrentPage\", \"as\", \"className\", \"href\"],\n    _excluded3 = [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"],\n    _excluded4 = [\"children\", \"spacing\", \"separator\", \"className\"];\n/**\n * React component that separates each breadcrumb link\n */\n\nvar BreadcrumbSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var spacing = props.spacing,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var styles = useStyles();\n\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\n\n\nvar BreadcrumbLink = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      as = props.as,\n      className = props.className,\n      href = props.href,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var styles = useStyles();\n\n  var sharedProps = _extends({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link,\n    href: href\n  }, sharedProps));\n});\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\n\n\nvar BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      separator = props.separator,\n      isLastChild = props.isLastChild,\n      spacing = props.spacing,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n\n    return child;\n  });\n  var styles = useStyles();\n\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\n\n\nvar Breadcrumb = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n\n  var children = ownProps.children,\n      _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      _ownProps$separator = ownProps.separator,\n      separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n      className = ownProps.className,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded4);\n\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n\n  var _className = cx(\"chakra-breadcrumb\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}\n\nexport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator };","map":null,"metadata":{},"sourceType":"module"}